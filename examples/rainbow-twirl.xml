<glsl-live-coder-project version="0.9.9">
  <shaders>
    <vertex><![CDATA[#version 130

in vec2 aVertex;
in vec2 aTexCoord;
out vec2 vTexCoord;

void main(void)
{
  vTexCoord = aTexCoord;
  gl_Position = vec4(aVertex, 0.0, 1.0);
}
]]></vertex>
    <fragment><![CDATA[// Rainbow twirl fragment shader
// Copyright (c) 2013 Oliver Lau, Heise Zeitschriften Verlag

#version 130

#pragma size(512, 512)

in vec2 vTexCoord;
out vec4 color;

const float PI = 3.14159265358979;
const float SQRT2 = 0.70710678118;
const vec2 CENTER = vec2(0.5, 0.5);

// elapsed time since program start in seconds (with fractions)
uniform float uT;
uniform float uAmount; // -100.0, 100.0, -10.53

vec4 rainbow(float v) {
  float angle = 2.0 * PI * v;
  vec3 rgb = vec3(0.5) - vec3(0.5) * cos(vec3(2.0, 3.0, 5.0) * vec3(angle));
  return vec4(rgb, 1.0);
}

void main(void) {
  vec4 c = rainbow(vTexCoord.x);
  vec2 uv = vTexCoord - CENTER;
  float radius = length(uv);
  float angle = atan(uv.y, uv.x) + radius * uAmount;
  vec2 shifted = radius * vec2(cos(angle), sin(angle));
  color = (radius < 0.5)? rainbow(SQRT2 * shifted.y) : vec4(0.0);
}]]></fragment>
  </shaders>
  <input>
    <image><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAED0lEQVR4nO3BMQEAAADCoPVPbQdvocC8AAB2WfxiAAAAABJRU5ErkJggg==]]></image>
  </input>
  <options>
    <clamp>1</clamp>
    <backgroundcolor>rgba(53,53,53,255)</backgroundcolor>
    <instantupdate>0</instantupdate>
    <imagerecycling>0</imagerecycling>
    <alpha>0</alpha>
  </options>
</glsl-live-coder-project>
