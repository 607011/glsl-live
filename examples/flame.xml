<glsl-live-coder-project version="0.9.6">
  <shaders>
    <vertex><![CDATA[// default vertex shader

attribute vec4 aVertex;
attribute vec4 aTexCoord;
varying vec4 vTexCoord;

void main(void)
{
  vTexCoord.x = aTexCoord.x;
  vTexCoord.y = 1.0 - aTexCoord.y;
  gl_Position = aVertex;
}
]]></vertex>
    <fragment><![CDATA[// Flame fragment shader

#pragma size(256, 256)

// texture coordinate (0;0)..(1;1)
varying vec4 vTexCoord;
// texture
uniform sampler2D uTexture;
// elapsed time since program start in seconds (with fractions)
uniform float uT;
// width by height of texture
uniform vec2 uResolution;
// mouse position within range of uResolution
uniform vec2 uMouse;

float noise(vec3 p) //Thx to Las^Mercury
{
  vec3 i = floor(p);
  vec4 a = dot(i, vec3(1.0, 57.0, 21.0)) + vec4(0.0, 57.0, 21.0, 78.0);
  vec3 f = 0.5 - 0.5 * cos(3.141529 * (p - i));
  a = mix(sin(cos(a)*a), sin(cos(1.0+a)*(1.0+a)), f.x);
  a.xy = mix(a.xz, a.yw, f.y);
  return mix(a.x, a.y, f.z);
}

float sphere(vec3 p, vec4 spr)
{
  	return length(spr.xyz - p) - spr.w;
}

float fire(vec3 p)
{
  	float d = sphere(p * vec3(1.0,.5,1.), vec4(.0,-1.,.0,1.));
  	return d + 0.2 * p.y * (noise(p + vec3(0.0, 2.0 * uT, 0.0)) + noise(3.9 * p) * 0.5);
}

float scene(vec3 p)
{
  	return min(100.0 - length(p) , abs(fire(p)));
}

vec4 raymarche(vec3 org, vec3 dir)
{
  	float d = 0.0;
  	vec3 p = org;
  	float glow = 0.0;
  	float eps = 0.02;
  	bool glowed = false;
  	for (int i = 0; i < 64; ++i) {
    	d = scene(p) + eps;
    	p += d * dir;
    	if (d > eps) 	{
      	if (fire(p) < 0.0)
        glowed = true;
      if (glowed)
        glow = float(i) / 64.0;
		    }
  }
  return vec4(p, glow);
}

void main()
{
  vec2 v = -1.0 + 2.0 * vTexCoord.st;
  vec3 org = vec3(0., -2.0, 4.0);
  vec3 dir   = normalize(vec3(v.x*1.6, -v.y, -1.5));
  vec4 p = raymarche(org, dir);
  float glow = p.w;
  gl_FragColor = mix(vec4(00.), mix(vec4(1.0, 0.5, 0.1, 1.0), vec4(0.1, 0.5, 1.0, 1.0), p.y * 0.02 + 0.4), pow(glow * 2.0, 4.0));
}

]]></fragment>
  </shaders>
</glsl-live-coder-project>
