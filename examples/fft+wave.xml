<glsl-live-coder-project version="0.9.11">
	<shaders>
		<vertex><![CDATA[#version 130

in vec2 aVertex;
in vec2 aTexCoord;
out vec2 vTexCoord;

void main(void)
{
    vTexCoord = aTexCoord;
    gl_Position = vec4(aVertex, 0.0, 1.0);
}
]]></vertex>
		<fragment><![CDATA[// FFT/Wave Fragment Shader
// use with audio file dropped onto uChannel0
// Copyright (c) 2013 Oliver Lau <ola@ct.de>, Heise Zeitschriften Verlag

#version 130

#pragma size(1280, 720)

in vec2 vTexCoord;
out vec4 color;
uniform sampler2D uChannel0;
uniform float uBlend; // 0.0, 1.0, 0.5

void main(void)
{
  vec2 uv = vec2(vTexCoord.x, 1.0 - vTexCoord.y);
  vec2 res = vec2(64.0, 200.0);
  vec3 col = vec3(0.3, 0.2, 0.1);
  vec2 iuv = floor(uv * res) / res;
  float f = 1.0 - abs(-1.0 + 2.0 * fract(uv.x * res.x));
  float g = 1.0 - abs(-1.0 + 2.0 * fract(uv.y * res.y));
  float fft = texture2D(uChannel0, vec2(iuv.x, 0.25)).x;
  if (iuv.y < fft * fft)
    col = vec3(0.9, 0.9, 0.6);
  float wave = texture2D(uChannel0, vec2(iuv.x * 0.5, 0.75)).x;
  if (abs(iuv.y-wave) <= (1.0/res.y))
    col = vec3(0.6, 0.2, 0.2);
  color = mix(vec4(col, 1.0), texture2D(uChannel0, vTexCoord), uBlend);
}]]></fragment>
	</shaders>
	<input>
	</input>
	<options>
		<clamp>1</clamp>
		<backgroundcolor>rgba(0,0,0,255)</backgroundcolor>
		<instantupdate>0</instantupdate>
		<imagerecycling>0</imagerecycling>
		<alpha>1</alpha>
	</options>
	<uniforms>
		<uniform type="double" name="uBlend">0.58</uniform>
	</uniforms>
</glsl-live-coder-project>
